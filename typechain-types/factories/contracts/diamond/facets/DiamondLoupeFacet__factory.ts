/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DiamondLoupeFacet,
  DiamondLoupeFacetInterface,
} from "../../../../contracts/diamond/facets/DiamondLoupeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "facetFunctionSelectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610647806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c57806352ef6b2c146100845780637a0ed62714610099578063adfca15e146100ae578063cdffacc6146100ce575b600080fd5b61006f61006a366004610442565b6100f9565b60405190151581526020015b60405180910390f35b61008c61012a565b60405161007b9190610473565b6100a1610196565b60405161007b9190610505565b6100c16100bc366004610582565b61033f565b60405161007b91906105ab565b6100e16100dc366004610442565b6103e9565b6040516001600160a01b03909116815260200161007b565b60008061010461041e565b6001600160e01b0319909316600090815260039093016020525050604090205460ff1690565b6060600061013661041e565b6002810180546040805160208084028201810190925282815293945083018282801561018b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161016d575b505050505091505090565b606060006101a261041e565b6002810154909150806001600160401b038111156101c2576101c26105be565b60405190808252806020026020018201604052801561020857816020015b6040805180820190915260008152606060208201528152602001906001900390816101e05790505b50925060005b8181101561033957600083600201828154811061022d5761022d6105d4565b9060005260206000200160009054906101000a90046001600160a01b0316905080858381518110610260576102606105d4565b6020908102919091018101516001600160a01b0392831690529082166000908152600186018252604090819020805482518185028101850190935280835291929091908301828280156102ff57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116102c15790505b5050505050858381518110610316576103166105d4565b602002602001015160200181905250508080610331906105ea565b91505061020e565b50505090565b6060600061034b61041e565b6001600160a01b038416600090815260018201602090815260409182902080548351818402810184019094528084529394509192908301828280156103dc57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161039e5790505b5050505050915050919050565b6000806103f461041e565b6001600160e01b03199093166000908152602093909352505060409020546001600160a01b031690565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b60006020828403121561045457600080fd5b81356001600160e01b03198116811461046c57600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156104b45783516001600160a01b03168352928401929184019160010161048f565b50909695505050505050565b600081518084526020808501945080840160005b838110156104fa5781516001600160e01b031916875295820195908201906001016104d4565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561057457888303603f19018552815180516001600160a01b03168452870151878401879052610561878501826104c0565b958801959350509086019060010161052c565b509098975050505050505050565b60006020828403121561059457600080fd5b81356001600160a01b038116811461046c57600080fd5b60208152600061046c60208301846104c0565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161060a57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220cc521c6db7ce9656c96b40b1067afceb7bed43782ce70858fc74f9b1f78aa61664736f6c63430008110033";

type DiamondLoupeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondLoupeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondLoupeFacet__factory extends ContractFactory {
  constructor(...args: DiamondLoupeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondLoupeFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondLoupeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondLoupeFacet {
    return super.attach(address) as DiamondLoupeFacet;
  }
  override connect(signer: Signer): DiamondLoupeFacet__factory {
    return super.connect(signer) as DiamondLoupeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeFacetInterface {
    return new utils.Interface(_abi) as DiamondLoupeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondLoupeFacet;
  }
}
